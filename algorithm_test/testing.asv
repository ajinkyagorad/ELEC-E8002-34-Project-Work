

    A1 = csvread('testdata4.csv');
%    A1 = coeff * csvread('accelerometer_reading_for_about_1min_18sec_in_50ms_interval_device_status_on_chest.csv',1);

    
%%

    fs = 200;
    dt = 1/fs;

%    Y = sqrt(sum(A1.^2,2));
    X = A1(:,2);
    Y = A1(:,3);
    Z = A1(:,4);
    %Ynorm = Y - averaging_filter(Y);
    T = (0:length(Y)-1) * dt;

    hp_order = 2;
    fc = 4; % 0.5Hz
    [B_hp,A_hp] = butter(hp_order,fc/(fs/2),'high');
    
    lp_order = 2;
    fc = 11; % xHz
    [B_lp,A_lp] = butter(lp_order,fc/(fs/2),'low');
    
    
    Xf = X - mean(X);
    Xf = filter(B_hp,A_hp,Xf);
    Xf = filter(B_lp,A_lp,Xf);
    
    Yf = Y - mean(Y);
    Yf = filter(B_hp,A_hp,Yf);
    Yf = filter(B_lp,A_lp,Yf);
    
    Zf = Z - mean(Z);
    Zf = filter(B_hp,A_hp,Zf);
    Zf = filter(B_lp,A_lp,Zf);
    
    
    R = sqrt(Xf.^2 + Yf.^2 + Zf.^2)
    
    
    hp_order = 2;
    fc = 0.66; % 0.5Hz
    [B_hp,A_hp] = butter(hp_order,fc/(fs/2),'high');
    
    lp_order = 2;
    fc = 2.5; % xHz
    [B_lp,A_lp] = butter(lp_order,fc/(fs/2),'low');
    
    
    Rf = R - mean(R);
    Rf = filter(B_hp,A_hp,Rf);
    Rf = filter(B_lp,A_lp,Rf);
    

    
  
    
    pick_1 = 0; pick_1_index =0;
    pick_2 = 0; pick_2_index =0;
    
    
    
    clf;
    subplot(2,1,1);

    plot(T,Rf);
    
    subplot(2,1,2);
    plot(T,Z);
    
    L = 400
    F = fft(Rf);
    
    
    
    %Compute the two-sided spectrum P2. Then compute the single-sided spectrum P1 based on P2 and the even-valued signal length L.
    P2 = abs(F);
    P1 = P2(1:L/2+1);
    P1(2:end-1) = 2*P1(2:end-1);
    
    figure
    f = fs*(0:(L/2))/L;
    plot(f,P1) 
    title('Single-Sided Amplitude Spectrum of X(t)')
    xlabel('f (Hz)')
    ylabel('|P1(f)|')
    
    [maxValue,indexMax] = max(P2);
    frequency = indexMax * fs / L;
    
    bpm = frequency*60
    
    figure
    
    findpeaks(Rf,T)
    xlabel('Time (s)')
    ylabel('Amplitude')
    title('All Peaks')
    
   
    val_previous = Rf(1)
    val_current  = 0;
    slop(1:L) = 0;
    minima(1:10) = 0;
    type(1:10) = 0;
    maxima(1:10) = 0;
    pick_index(1:10) = 0;
    kk = 1;
    for ii = 2:L 
        
        val_current = Rf(ii);
        df = (val_current-val_previous) / dt; 
        if(df > 0)
            slop(ii) = 1;
        elseif(df < 0)
             slop(ii) = -1;
        else
             slop(ii) = 0;
             
        end   
        
        if(slop(ii) == 0 || slop(ii-1)*slop(ii)< 1)
            if(ii == 2)
                continue;
            end
            
            pick_index(kk) = ii;
            
             
            if(slop(ii-1) > 0)
             maxima(kk) = val_current;
             type(kk) = 1;
             fprintf('%d slop a: %d, maxima %f , index %d\n',kk,  slop(ii),maxima(kk),pick_index(kk));
            elseif(slop(ii-1) < 0)
             minima(kk) = val_current;
             type(kk) = -1;
             fprintf('%d slop a: %d, minima %f , index %d\n',kk, slop(ii),minima(kk),pick_index(kk));
            else
                continue;
            end
            
            kk = kk + 1;
        end
        
        val_previous = val_current;    
        
        
    end
    
    figure
    plot(T,Rf);
    hold on;
    
     maximum = 0;
     minimum = 0;
     cnt_max = 0;
     cnt_min = 0;
     swing = 0;
    for kk = 2:10
        if(type(kk) == 1)
           maximum = maximum + maxima(kk); 
           cnt_max = cnt_max + 1;
        elseif (type(kk) == -1)
           minimum = minimum + minima(kk);
           cnt_min = cnt_min + 1;
        end
    end
   
    
    max_th = (maximum/cnt_max)*0.6
    min_th = (minimum/cnt_min)*0.6
    
    head = 0;
    tail = 0;
    current_maxima = 0;
    previous_maxima = -1;
    current_minima = 0;
    previous_minima = -1;
    previous = -1;
    count_diff = 1;
    
   
    difference(1:10) = 0;
    
    for kk = 1:length(type)
   
        if(type(kk) == 1 && maxima(kk) >max_th)
           fprintf('%d maxima %f , index %d, current %d \n',kk, maxima(kk),pick_index(kk), current_maxima);
           if(previous_maxima == -1)
               previous_maxima = kk;
               current_maxima = kk;
               if(previous == -1)
               previous  = kk;
               end
               continue;
           end
           
           current_maxima  = kk;
           
           if(pick_index(current_maxima ) - pick_index(previous) < 40)
                
               if(type(previous)==1 && maxima(current_maxima) > maxima(previous) && difference(count_diff-1) > 0)
                    fprintf('%d returned previous %d , current_maxima  %d\n',kk, previous,current_maxima);
                    difference(count_diff-1) = difference(count_diff-1) + (pick_index(current_maxima) - pick_index(previous));
                    previous_maxima = current_maxima;
                    previous  = current_maxima;
               end
               
               fprintf('%d returned previous %d , current_maxima  %d\n',kk, previous,current_maxima);
             continue;
           end
             fprintf('%d step previous_maxima %d , current_maxima  %d\n',kk, previous_maxima,current_maxima );
           difference(count_diff) = pick_index(current_maxima ) - pick_index(previous_maxima);
           fprintf('%d difference %d \n',count_diff, difference(count_diff));
           count_diff = count_diff + 1;
            
           previous_maxima = current_maxima;
           previous  = current_maxima;
           
        elseif (type(kk) == -1 && minima(kk) < min_th)
            
            fprintf('%d minima %f , index %d curent %d\n',kk, minima(kk),pick_index(kk), current_minima);
           if(previous_minima == -1)
               previous_minima = kk;
               current_minima = kk;
               if(previous == -1)
               previous  = kk;
               end
               continue;
           end
           
           current_minima = kk;
           
           if(pick_index(current_minima) - pick_index(previous) < 60)
                 if(type(previous)==-1 && maxima(current_minima) < maxima(previous)&& difference(count_diff-1) > 0)
                   difference(count_diff-1) =  difference(count_diff-1) + (pick_index(current_minima) - pick_index(previous));
                     previous_minima = current_minima;
                     previous  = current_minima;
                 end
               
               fprintf('%d returned previous %d , current_maxima  %d\n',kk, maxima(previous),maxima(current_minima));
             continue;
           end
            
           difference(count_diff) = pick_index(current_minima) - pick_index(previous_minima);
           fprintf('%d difference %d \n',count_diff, difference(count_diff));
           count_diff = count_diff + 1;
           previous_minima = current_minima;
           previous  = current_minima;
        end
        
        
    end
    
    cnt = 0;
    for jj = 1:count_diff-1
          if(difference(jj) > 0)
             cnt = cnt+1;
             bpm = bpm + difference(jj); 
          end
    end
    
    bpm = (bpm*0.005)/count_diff
    
    
  
    
    
    
    
    
